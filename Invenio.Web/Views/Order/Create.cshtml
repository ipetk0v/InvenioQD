@model OrderViewModel

@{
    ViewData["Title"] = "Order Create";
}

<br />

<div class="row">
    <div class="col-md-4"></div>
    <div class="col-md-4">
        <form asp-route-returnUrl="@ViewData["ReturnUrl"]" method="post">
            <h4>Create a new order.</h4>
            <hr />
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>         
            <div class="form-group">
                @Html.DropDownListFor(model => model.CustomerName, new SelectList(ViewBag.CustomerList), new { @class = "form-control" })
            </div>
            <div class="form-group">
                <label asp-for="OrderName"></label>
                <input asp-for="OrderName" class="form-control" />
                <span asp-validation-for="OrderName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="OrderNumber"></label>
                <input asp-for="OrderNumber" class="form-control" />
                <span asp-validation-for="OrderNumber" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CountToFinishOrder"></label>
                <input asp-for="CountToFinishOrder" class="form-control" />
                <span asp-validation-for="CountToFinishOrder" class="text-danger"></span>
            </div>
            <button type="submit" class="btn btn-default">Create</button>
        </form>
    </div>
    <div class="col-md-4"></div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}




